openapi: 3.0.0
info:
  title: Devices API
  version: '1.0'
  description: Manage your IOT devices with this awesome API!
  contact:
    name: Stephen Price
    url: 'https://www.linkedin.com/in/slprice/'
    email: stephen@stoplight.io
  termsOfService: cloudhome.io/api/devices/terms
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'http://localhost:3000/'
paths:
  '/api/devices/{accountid}':
    get:
      summary: getDevices
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/device.v1.json
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: ../models/error.v1.yaml
      operationId: get-api-devices
      description: Get a list of devices for a given account.
      security:
        - API Key: []
      parameters:
        - $ref: '#/components/parameters/deviceid'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/spaceid'
    post:
      summary: newDevice
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: ../models/responseCode.v1.yaml
      operationId: post-api-devices
      description: Add new devices to the IOT cloud.
      security:
        - API Key: []
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/spaceid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/device.v1.json
        description: ''
    parameters:
      - schema:
          type: string
          example: jetsonsHome
        name: accountid
        in: path
        required: true
        description: unique account id
components:
  schemas: {}
  parameters:
    accountid:
      schema:
        type: string
        example: jetsonsFutureHome
      name: accountid
      in: path
      required: true
      description: unique per account (see `'My Account'` for more information)
    spaceid:
      schema:
        type: string
        example: seattle-office
        default: all
      in: query
      name: spaceid
      description: location associated with the devices (see `'My Spaces'` for more information)
      allowEmptyValue: true
    deviceName:
      schema:
        type: string
        default: newDevice
        example: garageCamera
      in: header
      name: deviceName
      description: devices in the same space require unique names or will be assigned the default name `'newDevice'`
      allowEmptyValue: true
    deviceid:
      schema:
        type: string
        default: all
        example: 123abc
      in: header
      name: deviceid
      description: 'unique identifiers for devices registered on the service cloud, when empty it defaults to `''all''`'
      allowEmptyValue: true
      required: true
    sort:
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
        example: asc
      in: query
      name: sort
      allowEmptyValue: true
      description: will sort objects returned from the request
    limit:
      schema:
        type: integer
        default: 10
        format: int32
        example: 15
        maximum: 25
        minimum: 1
      in: query
      name: limit
      allowEmptyValue: true
      description: specify the number of results returned from the request
  securitySchemes:
    API Key:
      name: API Key
      type: apiKey
      in: query
